{"version":3,"sources":["webpack:///./js/second.js"],"names":["allUsers","userName","console","log","name","active","Promise","resolve","map","user"],"mappings":"sGAYyBA,EAAUC,E,kDAQnCC,QAAQC,KARiBH,EAPX,CACZ,CAAEI,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGUJ,EAQA,QAPxB,IAAIK,SAAQ,SAAAC,GACMP,EAASQ,KAAI,SAAAC,GAAI,OAAIA,EAAKL,OAASH,EAAd,iBACjCQ,EADiC,CAC3BJ,QAASI,EAAKJ,SAAWI,KACxCF,EAAQ,CAACE,UAAMJ,uB","file":"main.74fc0315c8719f734221.js","sourcesContent":["//Задание 2\r\n//Перепиши функцию toggleUserState() так, чтобы она не использовала callback - функцию\r\n//callback, а принимала всего два параметра allUsers и userName и возвращала промис.\r\n\r\n\r\nconst users = [\r\n  { name: 'Mango', active: true },\r\n  { name: 'Poly', active: false },\r\n  { name: 'Ajax', active: true },\r\n  { name: 'Lux', active: false },\r\n];\r\n\r\nconst toggleUserState = (allUsers, userName) => {\r\n    return new Promise(resolve => { \r\n        const updatedUsers = allUsers.map(user => user.name === userName ?\r\n            { ...user, active: !user.active } : user)\r\n        resolve({user ,active})\r\n    })\r\n };\r\n    \r\nconsole.log(toggleUserState(users, 'Mango'));\r\n//     const updatedUsers = allUsers.map(user =>\r\n//       user.name === userName ? { ...user, active: !user.active } : user,\r\n//   );\r\n\r\n//   callback(updatedUsers);\r\n\r\n\r\n//toggleUserState(users, 'Poly')\r\n\r\n//const logger = updatedUsers => console.table(updatedUsers);\r\n\r\n/*\r\n * Сейчас работает так\r\n */\r\n//toggleUserState(users, 'Mango', logger);\r\n//toggleUserState(users, 'Lux', logger);\r\n\r\n/*\r\n * Должно работать так\r\n */\r\n// toggleUserState(users, 'Mango').then(logger);\r\n// toggleUserState(users, 'Lux').then(logger);"],"sourceRoot":""}